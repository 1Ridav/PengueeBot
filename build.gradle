/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: "eclipse"
group 'bot.penguee'
version '1.0-SNAPSHOT'
apply plugin: 'java'
sourceCompatibility = 1.7

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    mavenLocal()
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

buildscript {
    dependencies {
        //classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE")
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'

    compile group: 'org.python', name: 'jython-standalone', version: '2.7.2'
    compile 'org.jocl:jocl:2.0.1'
}

task(runMain, dependsOn: 'classes', type: JavaExec) {
    main = 'bot.penguee.Main'
    classpath = sourceSets.main.runtimeClasspath
}

jar {
    from('src/main/java') {
        include 'kernel/*'
    }
    manifest {
        attributes 'Main-Class': 'bot.penguee.Main',
                   'Class-Path': configurations.runtime.files.collect { "PengueeBot_lib/$it.name" }.join(' ')
    }
}

task copyToLib(type: Copy) {
    into "${buildDir}/libs/PengueeBot_lib"
    from configurations.runtime
}
build.dependsOn(copyToLib)